argv = ['/usr/local/Cellar/node/0.8.12/bin/node-waf', 'configure', 'build']
blddir = '/Users/eli/dev/projects/node/apod-server/node_modules/restify/node_modules/dtrace-provider/build'
commands = {'dist': 0, 'configure': True, 'distcheck': 0, 'install': 0, 'build': True, 'clean': 0, 'distclean': 0, 'check': 0, 'uninstall': 0}
cwd = '/Users/eli/dev/projects/node/apod-server/node_modules/restify/node_modules/dtrace-provider'
environ = {'npm_package_dist_shasum': '8459fb26d734a7244a449ba1cfc925c1c9c2187e', 'rvm_hook': '', 'rvm_niceness': '', 'npm_config_engine_strict': '', 'npm_config_searchopts': '', 'npm_config_save_bundle': '', 'npm_config_group': '20', 'npm_package_homepage': 'https://github.com/chrisa/node-dtrace-provider#readme', 'npm_config_browser': '', 'npm_config_global': '', 'npm_config_color': 'true', 'SHELL': '/bin/zsh', 'COLORFGBG': '12;8', '_first': '1', 'rvm_version': '1.16.11 (stable)', 'SECURITYSESSIONID': '186a6', 'npm_config_pre': '', 'npm_config_tmp': '/var/folders/8b/5vkt05ds3ts5rgj8jtkjb6yc0000gn/T/', 'WORKON_HOME': '/Users/eli/.virtualenvs', 'npm_config_argv': '{"remain":[],"cooked":["rebuild"],"original":["rebuild"]}', 'npm_config_cache_lock_wait': '10000', 'LC_CTYPE': 'en_US.UTF-8', 'MY_RUBY_HOME': '/Users/eli/.rvm/rubies/ruby-1.9.3-p194', 'npm_config_save_dev': '', 'npm_config_optional': 'true', 'npm_config_init_version': '0.0.0', 'npm_config_user_agent': 'node/v0.8.12', 'VIRTUALENVWRAPPER_HOOK_DIR': '/Users/eli/.virtualenvs', 'npm_lifecycle_event': 'install', 'rvm_ruby_mode': '', 'npm_config_init_author_name': '', 'RUBY_VERSION': 'ruby-1.9.3-p194', 'rvm_alias_expanded': '', 'npm_config_yes': '', 'npm_config_usage': '', 'npm_package_description': 'Native DTrace providers for node.js applications', 'npm_config_shell': '/bin/zsh', 'npm_config_ignore': '', 'rvm_proxy': '', 'npm_config_globalconfig': '/usr/local/share/npm/etc/npmrc', 'rvm_gemstone_package_file': '', 'npm_config_parseable': '', 'rvm_path': '/Users/eli/.rvm', 'escape_flag': '1', 'npm_config_userignorefile': '/Users/eli/.npmignore', 'USER': 'eli', 'npm_package_author_name': 'Chris Andrews', 'npm_config_versions': '', 'SHLVL': '3', 'npm_config_cache_lock_stale': '60000', 'npm_config_init_author_url': '', 'npm_config_fetch_retry_maxtimeout': '60000', 'npm_config_unsafe_perm': 'true', 'npm_config_cache': '/Users/eli/.npm', 'npm_config_save_optional': '', 'GEM_PATH': '/Users/eli/.rvm/gems/ruby-1.9.3-p194:/Users/eli/.rvm/gems/ruby-1.9.3-p194@global', 'rvm_script_name': '', 'npm_config_proxy': '', 'rvm_ruby_make_install': '', 'npm_config_depth': 'null', 'npm_config_umask': '18', 'TMUX': '/private/var/folders/8b/5vkt05ds3ts5rgj8jtkjb6yc0000gn/T/tmux-501/default,3009,0', 'npm_config_long': '', 'npm_config_editor': 'vi', 'ITERM_PROFILE': 'Default', 'rvm_nightly_flag': '', 'TMPDIR': '/var/folders/8b/5vkt05ds3ts5rgj8jtkjb6yc0000gn/T/', 'npm_package_repository_type': 'git', 'npm_config_npat': '', 'GREP_OPTIONS': '--color=auto', 'npm_config_init_module': '/Users/eli/.npm-init.js', 'npm_config_fetch_retry_factor': '10', 'npm_config_json': '', 'npm_config_searchsort': 'name', 'GEM_HOME': '/Users/eli/.rvm/gems/ruby-1.9.3-p194', 'npm_lifecycle_script': 'node-waf clean ; node-waf configure build', 'PAGER': 'less -R', 'COMMAND_MODE': 'unix2003', 'npm_config_git': 'git', 'npm_package_readme': '"# dtrace-provider - Native DTrace providers for Node.js apps.\\n\\nThis extension allows you to create native DTrace providers for your\\nNode.js applications. That is, to create providers and probes which\\nexpose information specific to your application, rather than\\ninformation about the node runtime.\\n\\nYou could use this to expose high-level information about the inner\\nworkings of your application, or to create a specific context in which\\nto look at information from other runtime or system-level providers. \\n\\nThe provider is not created in the usual way, by declaring it and then\\nchanging the build process to include it, but instead dynamically at\\nruntime. This is done entirely in-process, and there is no background\\ncompiler or dtrace(1) invocation. The process creating the provider\\nneed not run as root.\\n\\n## INSTALL\\n\\n    $ npm install dtrace-provider\\n\\n## EXAMPLE\\n\\nHere\'s a simple example of creating a provider:\\n\\n    var d = require(\'dtrace-provider\');\\n\\n    var dtp = d.createDTraceProvider(\\"nodeapp\\");\\n    dtp.addProbe(\\"probe1\\", \\"int\\", \\"int\\");\\n    dtp.addProbe(\\"probe2\\", \\"char *\\");\\n    dtp.enable();\\t   \\n    dtp.fire(\\"probe1\\", function() { return [1, 2]; });\\n    dtp.fire(\\"probe2\\", function() { return [\\"hello, dtrace\\"]; });\\n\\nThis example creates a provider called \\"nodeapp\\", and adds two\\nprobes. It then enables the provider, at which point the provider\\nbecomes visible to DTrace.\\n\\nThe probes are then fired, which produces this output:\\n\\n    $ sudo dtrace -Z -n \'nodeapp*:::probe1{ trace(arg0); trace(arg1) }\'  \\\\\\n                     -n \'nodeapp*:::probe2{ trace(copyinstr(arg0));  }\'\\n    dtrace: description \'nodeapp*:::probe1\' matched 0 probes\\n    dtrace: description \'nodeapp*:::probe2\' matched 0 probes\\n    CPU     ID                    FUNCTION:NAME\\n      1 123562                      func:probe1                 1                2\\n      1 123563                      func:probe2   hello, dtrace                    \\n\\nArguments are captured by a callback only executed when the probe is\\nenabled. This means you can do more expensive work to gather arguments.\\n\\n## PLATFORM SUPPORT\\n\\nThe nature of this extension means that support must be added for each\\nplatform. Right now that support is only in place for OS X, 64 bit and\\nSolaris, 32 bit.\\n\\n## LIMITATIONS\\n\\nThe maximum number of probe arguments is 6. There\'s scope to increase\\nthis, with some extra complexity in the platform-specific code.\\n \\nThe data types supported are \\"int\\" and \\"char *\\". There\'s definitely\\nscope to improve this, with more elaborate argument handling - see\\nTODO.md\\n\\nYou can only create a provider once - although you don\'t have to do it\\nimmediately, once you\'ve set up a provider you can\'t change its\\ndefinition. It should be possible to enable updates - again, see\\nTODO.md.\\n\\n## CAVEATS\\n\\nPerformance is not where it should be, most especially the\\ndisabled-probe effect. Probes are already using the \\"is-enabled\\"\\nfeature of DTrace to control execution of the arguments-gathering\\ncallback, but too much work needs to be done before that\'s\\nchecked. That being said, unless your (disabled) probes are\\ninsanely hot, this shouldn\'t be a problem.\\n\\nPlease see TODO.md for the details. \\n\\n## CONTRIBUTING\\n\\nThe source is available at:\\n\\n  https://github.com/chrisa/node-dtrace-provider.\\n\\nFor issues, please use the Github issue tracker linked to the\\nrepository. Github pull requests are very welcome. \\n\\n## OTHER IMPLEMENTATIONS\\n\\nThis node extension is derived from the ruby-dtrace gem, via the Perl\\nmodule Devel::DTrace::Provider, both of which provide the same\\nfunctionality to those languages.\\n"', 'npm_config_rollback': 'true', 'npm_package_repository_url': 'http://github.com/chrisa/node-dtrace-provider.git', 'rvm_gemstone_url': '', 'HOME': '/Users/eli', 'DISPLAY': '/tmp/launch-SLEzb1/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'iTerm.app', 'LANG': 'en_US.UTF-8', 'Apple_PubSub_Socket_Render': '/tmp/launch-kqe8fM/Render', 'npm_config_save': '', 'npm_config_registry': 'https://registry.npmjs.org/', 'npm_config_unicode': 'true', 'npm_config_production': '', 'npm_config_message': '%s', 'rvm_sdk': '', 'npm_config_prefix': '/usr/local/share/npm', 'rvm_quiet_flag': '', 'npm_config_searchexclude': '', 'npm_config_loglevel': 'http', 'npm_config_cache_lock_retries': '10', 'rvm_prefix': '/Users/eli', 'npm_config_strict_ssl': 'true', 'IRBRC': '/Users/eli/.rvm/rubies/ruby-1.9.3-p194/.irbrc', 'npm_package_keywords_0': 'dtrace', 'npm_package_main': './dtrace-provider.js', 'npm_config_tag': 'latest', '_second': '2', 'npm_config_description': 'true', 'VIRTUALENVWRAPPER_LOG_DIR': '/Users/eli/.virtualenvs', 'npm_config_globalignorefile': '/usr/local/share/npm/etc/npmignore', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'npm_config_version': '', 'rvm_docs_type': '', 'npm_config_force': '', 'LOGNAME': 'eli', 'npm_package_author_email': 'chris@nodnol.org', 'TMUX_PANE': '%0', '_': '/usr/local/Cellar/node/0.8.12/bin/node-waf', 'npm_config_link': '', 'npm_package_name': 'dtrace-provider', 'npm_config_userconfig': '/Users/eli/.npmrc', 'npm_package_scripts_install': 'node-waf clean ; node-waf configure build', 'npm_config_dev': '', 'npm_config_rebuild_bundle': 'true', 'npm_config_npaturl': 'http://npat.npmjs.org/', 'npm_config_username': '', 'PATH': '/usr/local/Cellar/node/0.8.12/bin:/usr/local/Cellar/node/0.8.12/lib/node_modules/npm/bin/node-gyp-bin:/Users/eli/dev/projects/node/apod-server/node_modules/restify/node_modules/dtrace-provider/node_modules/.bin:/Users/eli/dev/projects/node/apod-server/node_modules/restify/node_modules/.bin:/Users/eli/dev/projects/node/apod-server/node_modules/.bin:/usr/local/share/npm/bin:/usr/local/bin:/Users/eli/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/share/python:/Users/eli/.rvm/bin', 'npm_config_coverage': '', 'TERM': 'screen-256color', 'npm_config_node_version': 'v0.8.12', 'npm_config_onload_script': '', 'npm_config_always_auth': '', 'npm_config_sign_git_tag': '', 'ITERM_SESSION_ID': 'w0t0p0', 'GREP_COLOR': '1;32', 'npm_config_fetch_retry_mintimeout': '10000', 'rvm_bin_path': '/Users/eli/.rvm/bin', 'npm_config_viewer': 'man', 'rvm_ruby_file': '', 'npm_config_fetch_retries': '2', 'npm_config_cache_max': 'null', 'SSH_AUTH_SOCK': '/tmp/launch-03wunP/Listeners', 'npm_config_proprietary_attribs': 'true', 'rvm_ruby_make': '', 'npm_config_user': '501', 'npm_package_version': '0.0.9', 'npm_config_https_proxy': '', 'npm_config_init_author_email': '', 'VIRTUALENVWRAPPER_PROJECT_FILENAME': '.project', 'LSCOLORS': 'Gxfxcxdxbxegedabagacad', 'rvm_wrapper_name': '', 'Apple_Ubiquity_Message': '/tmp/launch-FcV1yT/Apple_Ubiquity_Message', 'PWD': '/Users/eli/dev/projects/node/apod-server/node_modules/restify/node_modules/dtrace-provider', 'rvm_silent_flag': '', 'npm_config_cache_min': '', '__array_start': '1'}
files = []
hash = 0
options = {'compile_targets': None, 'force': False, 'verbose': 0, 'nocache': False, 'progress_bar': 0, 'destdir': '', 'keep': False, 'zones': '', 'blddir': '', 'prefix': '/usr/local/', 'jobs': 8, 'srcdir': '', 'check_cxx_compiler': 'g++'}
srcdir = '/Users/eli/dev/projects/node/apod-server/node_modules/restify/node_modules/dtrace-provider'
